//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace siam_client.siam_service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XMLMessage", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class XMLMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string xmlStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string xmlString {
            get {
                return this.xmlStringField;
            }
            set {
                if ((object.ReferenceEquals(this.xmlStringField, value) != true)) {
                    this.xmlStringField = value;
                    this.RaisePropertyChanged("xmlString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiamFault", Namespace="http://schemas.datacontract.org/2004/07/NfseSvc")]
    [System.SerializableAttribute()]
    public partial class SiamFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="siam_service.INfse")]
    public interface INfse {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INfse/EnviarLoteRpsSincronoEnvio", ReplyAction="http://tempuri.org/INfse/EnviarLoteRpsSincronoEnvioResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(siam_client.siam_service.SiamFault), Action="http://tempuri.org/INfse/EnviarLoteRpsSincronoEnvioSiamFaultFault", Name="SiamFault", Namespace="http://schemas.datacontract.org/2004/07/NfseSvc")]
        siam_client.siam_service.XMLMessage EnviarLoteRpsSincronoEnvio(string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INfse/EnviarLoteRpsSincronoEnvio", ReplyAction="http://tempuri.org/INfse/EnviarLoteRpsSincronoEnvioResponse")]
        System.Threading.Tasks.Task<siam_client.siam_service.XMLMessage> EnviarLoteRpsSincronoEnvioAsync(string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INfse/ConsultarLoteRpsEnvio", ReplyAction="http://tempuri.org/INfse/ConsultarLoteRpsEnvioResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(siam_client.siam_service.SiamFault), Action="http://tempuri.org/INfse/ConsultarLoteRpsEnvioSiamFaultFault", Name="SiamFault", Namespace="http://schemas.datacontract.org/2004/07/NfseSvc")]
        siam_client.siam_service.XMLMessage ConsultarLoteRpsEnvio(string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INfse/ConsultarLoteRpsEnvio", ReplyAction="http://tempuri.org/INfse/ConsultarLoteRpsEnvioResponse")]
        System.Threading.Tasks.Task<siam_client.siam_service.XMLMessage> ConsultarLoteRpsEnvioAsync(string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INfse/ValidarXml", ReplyAction="http://tempuri.org/INfse/ValidarXmlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(siam_client.siam_service.SiamFault), Action="http://tempuri.org/INfse/ValidarXmlSiamFaultFault", Name="SiamFault", Namespace="http://schemas.datacontract.org/2004/07/NfseSvc")]
        siam_client.siam_service.XMLMessage ValidarXml(string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INfse/ValidarXml", ReplyAction="http://tempuri.org/INfse/ValidarXmlResponse")]
        System.Threading.Tasks.Task<siam_client.siam_service.XMLMessage> ValidarXmlAsync(string param);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INfseChannel : siam_client.siam_service.INfse, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NfseClient : System.ServiceModel.ClientBase<siam_client.siam_service.INfse>, siam_client.siam_service.INfse {
        
        public NfseClient() {
        }
        
        public NfseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NfseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NfseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NfseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public siam_client.siam_service.XMLMessage EnviarLoteRpsSincronoEnvio(string param) {
            return base.Channel.EnviarLoteRpsSincronoEnvio(param);
        }
        
        public System.Threading.Tasks.Task<siam_client.siam_service.XMLMessage> EnviarLoteRpsSincronoEnvioAsync(string param) {
            return base.Channel.EnviarLoteRpsSincronoEnvioAsync(param);
        }
        
        public siam_client.siam_service.XMLMessage ConsultarLoteRpsEnvio(string param) {
            return base.Channel.ConsultarLoteRpsEnvio(param);
        }
        
        public System.Threading.Tasks.Task<siam_client.siam_service.XMLMessage> ConsultarLoteRpsEnvioAsync(string param) {
            return base.Channel.ConsultarLoteRpsEnvioAsync(param);
        }
        
        public siam_client.siam_service.XMLMessage ValidarXml(string param) {
            return base.Channel.ValidarXml(param);
        }
        
        public System.Threading.Tasks.Task<siam_client.siam_service.XMLMessage> ValidarXmlAsync(string param) {
            return base.Channel.ValidarXmlAsync(param);
        }
    }
}
